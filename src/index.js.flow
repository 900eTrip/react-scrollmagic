import { default as React } from 'react';
import type { Node } from 'react';

export type SMControllerProps = {
  children: Node,
  container?: any,
  vertical?: boolean,
  globalSceneOptions?: any,
  loglevel?: number,
  refreshInterval?: number,

}

export type SMControllerState = {
  controller: ?any,
}

declare class SMController extends React.Component<SMControllerProps, SMControllerState> {}

export { SMController };

export type Tween = {
  target?: any,
  duration?: number,
  from?: any,
  to?: any,
  staggerFrom?: any,
  staggerTo?: any,
  stagger?: number,
  onCompleteAll?: Function,
  position?: number | string,
}

export type PinSettings = {
  pushFollowers?: boolean,
  spacerClass?: string,
}

export type Timeline = {
  tweens: Array<Tween>,
  delay?: number,
  stagger?: number,
  align?: 'sequence' | 'start' | 'normal',
  repeat?: number,
  repeatDelay?: number,
  yoyo?: boolean,
}

export type SMSceneProps = {
  children: Node | Function,

  // scene parameters
  duration?: number | string,
  offset?: number | string,
  triggerElement?: any,
  triggerHook?: any,
  reverse?: boolean,
  loglevel?: number,
  indicators?: boolean,
  enabled?: boolean,

  /* setClassToggle */
  classToggle?: string | Array<string>,

  /* setPin */
  pin?: boolean | string,
  pinSettings?: PinSettings,

  /* setTween */
  tween?: Tween,

  timeline?: Timeline,

}

export type SMSceneBaseProps = SMSceneProps & {
  context: any,
}

export type SMSceneBaseState = {
  event: string,
  progress: number,
}

declare class SMSceneBase extends React.PureComponent<SMSceneBaseProps, SMSceneBaseState> {}

declare class SMScene extends React.PureComponent<SMSceneProps, {}> {}

export { SMScene };